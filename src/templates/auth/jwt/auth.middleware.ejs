import jwt from 'jsonwebtoken';

export default (options = {}) => {
  return async (req, res, next) => {
    const authHeader = req.headers.authorization;
    const token = authHeader?.startsWith("Bearer ")
      ? authHeader.split(" ")[1]
      : null;

    if (!token) {
      if (options.required) {
        return res.status(401).json({ error: "Authentication required" });
      }
      return next(); // sigue sin user si no es requerido
    }

    try {
      const decoded = jwt.verify(token, process.env.JWT_SECRET);
      req.user = decoded;

      if (options.admin && decoded.role !== "admin") {
        return res.status(403).json({ error: "Admin access required" });
      }

      req.requireSelf = !!options.self;

      next();
    } catch {
      if (options.required) {
        return res.status(401).json({ error: "Invalid or expired token" });
      }
      next(); // sigue sin user
    }
  };
};
